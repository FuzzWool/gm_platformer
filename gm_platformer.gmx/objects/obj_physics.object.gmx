<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The amount "batched on" to a proportional movement.
move_x = 0
move_y = 0

//The absolute limits of a movement. May never exceed.
cap_x = 2.5
cap_y = 7.5

//The amount the move values go towards 'normalizing' each loop.
slow_x = 0.25
slow_y = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//APPLY PHYSICS

//Cap movement.
if move_x &gt;= +cap_x {move_x = +cap_x}
if move_x &lt;= -cap_x {move_x = -cap_x}
if move_y &gt;= +cap_y {move_y = +cap_y}
if move_y &lt;= -cap_y {move_y = -cap_y}

//Move, check all nearby collisions.
if move_x &gt; 0 {move_push(+1,0,+round(move_x))}
if move_x &lt; 0 {move_push(-1,0,-round(move_x))}
if move_y &gt; 0 {move_push(0,+1,+round(move_y))}
if move_y &lt; 0 {move_push(0,-1,-round(move_y))}

//Slow down movement.
if move_x &gt; 0 {move_x -= slow_x}
if move_x &lt; 0 {move_x += slow_x}
if move_y &gt; 0 {move_y -= slow_y}
if move_y &lt; 0 {move_y += slow_y}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
