<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>moth_collision</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
image_speed = 2

//EVENTS
slashing = false
facing_right = false
on_ground = false

//

_old_sprite = self
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PHYSICS
move_y += 0.4
//reset on floor
if place_meeting(x,y+1,obj_solid)
{move_y = 0;}
//ceiling bump
if place_meeting(x,y-1,obj_solid)
and move_y &lt; 0
{move_y = 0;}

//STATES
on_ground = false
if place_meeting(x,y+1,obj_solid){on_ground = true}
if move_x &gt; 0 {facing_right = true}
if move_x &lt; 0 {facing_right = false}

//CONTROLS
//move
if keyboard_check(vk_left){move_x -= 1}
if keyboard_check(vk_right){move_x += 1}
//jump
if keyboard_check(ord('Z')) and on_ground{move_y -= 5.5;}
//slash
if keyboard_check(ord('X')){slashing = true}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITBOX
draw_me()
//draw_text(32,32,string(image_index))
/*a="Hello World!"
b=33
draw_text(32,64,"The number sign is a line break!#Here's how you print variables:#"+string(a)+" You have "+string(b)+" apples.#Easy huh?")
*/

//SPRITES

//direction, origin
if facing_right == true {_flip = 1}
if facing_right == false {_flip = -1}
_x = x+8; _y = y

//sprites
_sprite=moth_idle
if move_x != 0 and on_ground{_sprite=moth_walk}
if slashing{_sprite=moth_slash}

//draw
draw_sprite_ext
(_sprite, round(image_index/3), _x,_y, _flip,1, 0, c_white, 255 );
//draw_text(32,32,string(sprite_get_number(_sprite)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
