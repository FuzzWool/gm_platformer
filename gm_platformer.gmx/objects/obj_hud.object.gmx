<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP BARS
track_player = false
hp_bars = 0

_init = false
_animated_hp = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Track HP.
//track_player, hp_bars

//INIT player HP.
if _init == false
{
    __i = 0; while __i &lt; track_player.hp
    {
        //animated hp reset
        _animated_hp = track_player.hp
        //create hp bars
        __hp = instance_create(18+(4*__i),2, obj_hp);
        __hp.image_index = 11
        hp_bars[__i] = __hp
        __i+=1;
    }
    _init = true
}

//LOOP bump the HP bars to match the Player's current HP.
//Animate
if track_player.hp &gt; _animated_hp{_animated_hp += (1/11);}
if track_player.hp &lt; _animated_hp{_animated_hp -= (1/11);}
__using_hp = _animated_hp

//__using_hp = track_player.hp //(don't animate)
__i = 0; __end = array_length_1d(hp_bars)
while __i &lt; __end
{
    if __i &lt; floor(__using_hp) //full hp
    {hp_bars[__i].image_index = 11}
    else if __i == floor(__using_hp) //some hp
    {
        __hp = __using_hp; while __hp &gt;= 1{__hp -= 1}
        hp_bars[__i].image_index = __hp*11
    }
    else //no hp
    {hp_bars[__i].image_index = 0}
    __i += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
