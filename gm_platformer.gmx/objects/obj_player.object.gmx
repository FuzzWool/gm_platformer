<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>moth_collision</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_physics</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

//BEGIN STEP
_slashing = false
_hovering = false
_facing_right = false
_on_ground = false

//DRAW
_sprite = moth_idle
_frame = 0
_animspeed = 0.3
__old_sprite = _sprite

_hover_sprite = moth_jump_hover
_hover_frame = 0
_hover_animspeed = 0.5

//HITBOXES
_attackbox = moth_attackbox
//_hurtbox
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PHYSICS
if _hovering == false {move_y += 0.25}
if _hovering == true  {move_y += 0.25}
//reset on floor
if place_meeting(x,y+1,obj_solid)
{move_y = 0;}
//ceiling bump
if place_meeting(x,y-1,obj_solid)
and move_y &lt; 0
{move_y = 0;}

//STATES
//ground
_on_ground = false
if place_meeting(x,y+1,obj_solid){_on_ground = true}
//direction
if not _slashing
{
    if move_x &gt; 0 {_facing_right = true}
    if move_x &lt; 0 {_facing_right = false}
}
//slashing
if _frame &gt;= sprite_get_number(_sprite)-1 {_slashing = false;}
//hover
if _on_ground{_hovering = false}


//CONTROLS
//move
if keyboard_check(vk_left){move_x -= 1}
if keyboard_check(vk_right){move_x += 1}
//jump
if keyboard_check_pressed(ord('Z'))
{
    if not _on_ground and not _hovering{move_y = -3; _hovering = true}
    if _on_ground{move_y = -4.5;}
}
//jump height
if keyboard_check_released(ord('Z')) and not _hovering
{
    if move_y &lt;= 0 {move_y += 1.5;}
}

//slash
if keyboard_check_pressed(ord('X')){_slashing = true}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HITBOXES
_attackbox.x = x+5; _attackbox.y = y+14
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//direction, origin
if _facing_right == true {_flip = 1}
if _facing_right == false {_flip = -1}
_x = x+5; _y = y+14


//HITBOX
draw_me()
draw_sprite_ext
(_attackbox, 0, _x,_y, _flip,1, 0, c_white, 255 );



//MAIN SPRITES

//WINGS
if _hovering
{
    _hover_frame += _hover_animspeed
    _hover_frame = _hover_frame mod sprite_get_number(_hover_sprite)
    draw_sprite_ext
    (_hover_sprite, _hover_frame, _x,_y, _flip,1, 0, c_white, 0.5);
}

//MOTH
_sprite=moth_idle; animspeed = 0.1
if move_x != 0 and _on_ground{_sprite=moth_walk; _animspeed=0.3}
if not _on_ground
{
    if move_y &gt;  0 {_sprite=moth_jump_down;}
    if move_y &lt;= 0 {_sprite=moth_jump_up;}
}
if _slashing{_sprite=moth_slash; _animspeed = 0.4}
//(reset frame)
if _sprite != __old_sprite {_frame = 0;}
__old_sprite = _sprite

//draw
_frame += _animspeed
_frame = _frame mod sprite_get_number(_sprite)
draw_sprite_ext
(_sprite, _frame, _x,_y, _flip,1, 0, c_white, 255 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
